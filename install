#!/bin/bash

set -eE -o functrace

failure() {
  local lineno=$1
  local msg=$2
  echo "Failed at $lineno: $msg"
}

trap backtrace ERR
trap 'failure ${LINENO} "$BASH_COMMAND"' ERR

rm -rf /usr/local/lib/adlamin
cp -r ./lib /usr/local/lib/adlamin

chmod +x ./sbin/*
cp ./sbin/* /usr/local/sbin

chmod +x ./bin/*
cp ./bin/* /usr/local/bin

source /usr/local/lib/adlamin/install/networking.sh
source /usr/local/lib/adlamin/firewall/iptables.sh

install_dependencies() {
  apt update
  apt upgrade -y

  apt install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    docker \
    nodejs \
    knockd \
    iptables-persistent \
    npm

  mkdir -p /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

  apt update
  apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
}

install_dependencies

echo "creating iptables rules"
create_iptables
echo "done"

echo "Ingrese la interfaz donde escucha actualmente el servicio de ssh"
read SSH_INTERFACE

drop_all

SSH_CLIENT=$(echo $SSH_CLIENT | awk '{ print $1}')
SAFE_SSH_CLIENT=${SSH_CLIENT:localhost}
enable_server_for $SSH_INTERFACE tcp 22 $SAFE_SSH_CLIENT

load_input_filters

iptables-save > /etc/iptables/rules.v4

nano /etc/default/knockd

setup_dmz
setup_internal